enum custom_keycodes {
    yabai_left = SAFE_RANGE,
    yabai_right,
    yabai_up,
    yabai_down,
    uname,
    lock,
    
};

bool process_record_user(uint16_t keycode, keyrecord_t *record) {
    switch (keycode) {

    case yabai_left:
        if (record->event.pressed) {
            // when keycode yabai_left is pressed
            SEND_STRING(SS_DOWN(X_LALT) SS_TAP(X_LEFT) SS_UP(X_LALT));
        } else {
            // when keycode yabai_left is released
        }
        break;

    case yabai_rght:
        if (record>event.pressed) {
            // when keycode yabai_right is pressed
            SEND_STRING(SS_DOWN(X_LALT) SS_TAP(X_RGHT) SS_UP(X_LALT));
        } else {
            // when keycode yabai_right is released
        }
        break;

    case uname:
        if (record>event.pressed) {
            // when keycode yabai_right is pressed
            SEND_STRING("test");
        } else {
            // when keycode yabai_right is released
        }
        break;
    }

    return true;

};

const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
    [0] = {
        {yabai_left, yabai_right, KC_ESC},
        // ...
    },
};